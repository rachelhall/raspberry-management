---
interface Props {
    width?: "full" | "truncated";
    color?: "white" | "plum" | "berry";
    order?: "front" | "back";
}

const { color = "white", width = "full", order = "back" } = Astro.props;

const backgroundColor =
    color === "white"
        ? "white"
        : color === "plum"
        ? "var(--plum)"
        : "var(--black)";

const containerMargin = width === "truncated" ? "0 12rem" : "0";
const transform = width === "truncated" ? "-100px" : "0";
const zIndex = order === "front" ? 2 : 1;
const textColor =
    color === "white"
        ? "var(--black)"
        : color === "plum"
        ? "white"
        : "var(--black)";

const containerMarginMobile = width === "truncated" ? "0 2rem" : "0";
const transformMobile = width === "truncated" ? "-20px" : "0";
---

<div class="container">
    <slot />
</div>
<style
    define:vars={{
        backgroundColor,
        containerMargin,
        containerMarginMobile,
        transform,
        transformMobile,
        zIndex,
        textColor,
    }}
>
    .container {
        color: var(--textColor);
        position: relative;
        display: flex;
        flex-direction: column;
        flex: 1;
        margin: var(--containerMargin);
        position: relative;
        z-index: 2;
        padding: 2rem 8rem;
        background-color: var(--backgroundColor);
        transform: translateY(var(--transform));
        z-index: var(--zIndex);
    }

    @media screen and (max-width: 480px) {
        .container {
            padding: 2rem;
            margin: 0;
            transform: translateY(0);
        }
    }
</style>
